package _08_Bit.HF_bit;


import org.junit.Test;

//  365. Count 1 in Binary
//  http://lintcode.com/en/problem/count-1-in-binary/
//
public class _04Count1_inBinary {
    /**
     * @param num: an integer
     * @return: an integer, the number of ones in num
     */
    public int countOnes(int num) {
        int count = 0;
        while (num != 0) {
            System.out.printf("%10s%32s\n", "num: ", Integer.toBinaryString(num));
            System.out.printf("%10s%32s\n", "num - 1: ", Integer.toBinaryString(num - 1));
            System.out.printf("%10s%32s\n", "num & (num - 1): ", Integer.toBinaryString(num & (num - 1)));

            //这个操作每次消去num最后一个1
            num = num & (num - 1);

            System.out.println("------------------------------------------------");
            count++;
        }
        return count;
    }
    @Test
    public void test(){
        System.out.println(countOnes(10111));
        System.out.println(Integer.bitCount(10111));
        System.out.println("------------------------------------------------");
    }
    /*
     num:                   10011101111111
 num - 1:                   10011101111110
num & (num - 1):            10011101111110
------------------------------------------------
     num:                   10011101111110
 num - 1:                   10011101111101
num & (num - 1):            10011101111100
------------------------------------------------
     num:                   10011101111100
 num - 1:                   10011101111011
num & (num - 1):            10011101111000
------------------------------------------------
     num:                   10011101111000
 num - 1:                   10011101110111
num & (num - 1):            10011101110000
------------------------------------------------
     num:                   10011101110000
 num - 1:                   10011101101111
num & (num - 1):            10011101100000
------------------------------------------------
     num:                   10011101100000
 num - 1:                   10011101011111
num & (num - 1):            10011101000000
------------------------------------------------
     num:                   10011101000000
 num - 1:                   10011100111111
num & (num - 1):            10011100000000
------------------------------------------------
     num:                   10011100000000
 num - 1:                   10011011111111
num & (num - 1):            10011000000000
------------------------------------------------
     num:                   10011000000000
 num - 1:                   10010111111111
num & (num - 1):            10010000000000
------------------------------------------------
     num:                   10010000000000
 num - 1:                   10001111111111
num & (num - 1):            10000000000000
------------------------------------------------
     num:                   10000000000000
 num - 1:                    1111111111111
num & (num - 1):                         0
------------------------------------------------
11
11
------------------------------------------------
     */
//---------------------------------------------------
}
/*---------------------------------------------------
Count how many 1 in binary representation of a 32-bit integer.

Example
Given 32, return 1

Given 5, return 2

Given 1023, return 9
 */

/*---------------------------------------------------
365. 二进制中有多少个1

 描述
 笔记
 数据
 评测
计算在一个 32 位的整数的二进制表示中有多少个 1.

您在真实的面试中是否遇到过这个题？ Yes
样例
给定 32 (100000)，返回 1

给定 5 (101)，返回 2

给定 1023 (1111111111)，返回 10

挑战
If the integer is n bits with m 1 bits. Can you do it in O(m) time?

标签
比特位操作 二进制
相关题目
容易 O(1)时间检测2的幂次
 */