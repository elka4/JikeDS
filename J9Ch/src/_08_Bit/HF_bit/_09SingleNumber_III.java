package _08_Bit.HF_bit;


//  84. Single Number III
//  http://lintcode.com/zh-cn/problem/single-number-iii/
//
public class _09SingleNumber_III {
//---------------------------------------------------------------------
    public int[] singleNumber(int[] nums) {
        //用于记录，区分“两个”数组
        int diff = 0;
        for(int i = 0; i < nums.length; i ++) {
            diff ^= nums[i];
        }
        //取最后一位1
        //先介绍一下原码，反码和补码
        //原码，就是其二进制表示（注意，有一位符号位）
        //反码，正数的反码就是原码，负数的反码是符号位不变，其余位取反
        //补码，正数的补码就是原码，负数的补码是反码+1
        //在机器中都是采用补码形式存
        //diff & (-diff)就是取diff的最后一位1的位置
        diff &= -diff;

        int[] rets = {0, 0};
        for(int i = 0; i < nums.length; i ++) {
            //分属两个“不同”的数组
            if ((nums[i] & diff) == 0) {
                rets[0] ^= nums[i];
            }
            else {
                rets[1] ^= nums[i];
            }
        }
        return rets;
    }
//---------------------------------------------------------------------

//---------------------------------------------------------------------
}
/*
84. 落单的数 III

 描述
 笔记
 数据
 评测
给出2*n + 2个的数字，除其中两个数字之外其他每个数字均出现两次，找到这两个数字。

您在真实的面试中是否遇到过这个题？ Yes
样例
给出 [1,2,2,3,4,4,5,3]，返回 1和5

挑战
O(n)时间复杂度，O(1)的额外空间复杂度

标签
LintCode 版权所有 贪心
相关题目
中等 落单的数 II 40 %
容易 落单的数 46 %
中等 主元素 III 29 %
中等 主元素 II 31 %
容易 主元素
 */